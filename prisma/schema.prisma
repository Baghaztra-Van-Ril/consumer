// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id          Int           @id @default(autoincrement())
  email       String        @unique
  name        String
  password    String?
  googleId    String?       @unique
  role        Role          @default(USER)
  deletedAt   DateTime?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  transaction Transaction[]
  favorites   Favorite[]
}

model Product {
  id           Int           @id @default(autoincrement())
  name         String
  description  String?
  price        Int
  imageUrl     String
  size         Int
  stock        Int           @default(0)
  visitCount   Int           @default(0)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  transactions Transaction[]
  promo        Promo[]
  favorites    Favorite[]
}

model Transaction {
  id             Int       @id @default(autoincrement())
  orderId        String    @unique
  userId         Int
  productId      Int
  quantity       Int
  price          Int
  totalPrice     Int
  promoId        Int?
  promoAmount    Int?
  finalAmount    Int
  paymentStatus  String
  paymentMethod  String
  paymentRef     String?
  snapToken      String?
  shipmentStatus String
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  deletedAt      DateTime?

  user    User    @relation(fields: [userId], references: [id])
  product Product @relation(fields: [productId], references: [id])
  promo   Promo?  @relation(fields: [promoId], references: [id])
}

model Promo {
  id        Int      @id @default(autoincrement())
  productId Int
  imageUrl  String
  discount  Decimal
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product     Product       @relation(fields: [productId], references: [id], onDelete: Cascade)
  Transaction Transaction[]
}

model Favorite {
  id        Int      @id @default(autoincrement())
  userId    Int
  productId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([userId, productId])
}
